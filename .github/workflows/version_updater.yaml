name: Version Updater
on:
  pull_request:
    branches:
      - master
jobs:
---
  check_src_changes:
    name: Check changes in src folder
    runs-on: ubuntu-latest
    outputs:
      old_hash: ${{ steps.get_stored_hash.outputs.srcHash }}
      new_hash: ${{ steps.calculate_hash.outputs.hash }}
    steps:
      - name: Block paralell runs
        uses: softprops/turnstyle@v1
        with:
          abort-after-seconds: 60
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout current
        uses: actions/checkout@v2

      - name: Get stored hash
        id: get_stored_hash
        run: ./.github/scripts/get_package_variable.sh "srcHash"

      - name: Calculate src folder hash
        id: calculate_hash
        run: ./.github/scripts/calculate_hash.sh "src"
---
  get_current_version:
    name: Get current version
    runs-on: ubuntu-latest
    needs:
      - check_src_changes
    outputs:
      version: ${{ steps.package-version.outputs.version }}
    if: ${{ needs.check_src_changes.outputs.old_hash != needs.check_src_changes.outputs.new_hash }}
    steps:
      - name: Checkout current
        uses: actions/checkout@v2

      - name: Get current version
        id: package-version
        run: ./.github/scripts/get_package_variable.sh "version"
---
  get_master_version:
    name: Get master version
    runs-on: ubuntu-latest
    needs:
      - check_src_changes
    outputs:
      version: ${{ steps.package-version.outputs.version }}
    if: ${{ needs.check_src_changes.outputs.old_hash != needs.check_src_changes.outputs.new_hash }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        #with:
          #ref: master

      - name: Get master version
        id: package-version
        run: ./.github/scripts/get_package_variable.sh "version"
---
  bump_hash_and_version:
      name: Bump hash and version if needed 
      runs-on: ubuntu-latest
      env:
        GIT_PUSH_AUTHOR_EMAIL: ${{ secrets.BOT_USER_EMAIL }}
        GIT_PUSH_AUTHOR_NAME: ${{ secrets.BOT_USER_NAME }}
      needs:
        - check_src_changes
        - get_current_version
        - get_master_version
      if: ${{ always() && needs.check_src_changes.outputs.old_hash != needs.check_src_changes.outputs.new_hash }}
      steps:
        - name: Setup node 12
          uses: actions/setup-node@v1
          with:
            node-version: 12

        - name: Checkout current
          uses: actions/checkout@v2
          with:
            ref: ${{ github.head_ref }}
            token: ${{ secrets.BOT_USER_ACCESS_TOKEN }}

        - name: Update hash
          run: ./.github/scripts/set_package_variable.sh "srcHash" "${{ needs.check_src_changes.outputs.new_hash }}"

        - name: Fail workflow if version is invalid
          if: ${{ needs.get_current_version.outputs.version < needs.get_master_version.outputs.version }}
          run: |
            echo "::error file=version_updater.yaml::The current version '${{ needs.get_current_version.outputs.version }}' is invalid."
            exit 1

        - name: Bump patch version if needed
          if: ${{ needs.get_current_version.outputs.version == needs.get_master_version.outputs.version }}
          run: ./.github/scripts/bump_version.sh "patch"

        - name: Push updated package.json
          run: |
            commit_message=`[ "${{ needs.get_current_version.outputs.version }}" == "${{ needs.get_master_version.outputs.version }}" ] && echo "Updating hash and version" || echo "Updating hash"`
            ./.github/scripts/git_push.sh "$commit_message"
---